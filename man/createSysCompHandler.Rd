% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sysCompHandler.R
\name{createSysCompHandler}
\alias{createSysCompHandler}
\title{Create Systematic Component Handler}
\usage{
createSysCompHandler()
}
\value{
A list with functions to manage systematic components, see \code{Details}
}
\description{
Creates a handler (i.e. list of functions) to operate with systematic components.
}
\details{
The two main responsibilities of the handler are (1) to construct a mapping matrix \code{S}
that maps the systematic components to the measurements, and (2) to construct a covariance matrix
\code{P} associated with the systematic components.
The respective functions are
\describe{
  \item{\code{map(expDt, sysDt, ret.mat)}}{
    The datatable \code{expDt} must contain the columns \code{IDX, EXPID, DIDX, DATA, UNC}.
    The datatable \code{sysDt} must contain the columns \code{IDX, EXPID, DIDX, ERRTYPE, GPTYPE, DATA, UNC}.
    If the logical flag \code{ret.mat} is \code{TRUE}, a sparse matrix will be returned,
    otherwise a datatable with columns \code{IDX1, IDX2, X}.
  }
  \item{\code{cov(sysDt, gpDt = NULL, ret.mat)}}{
    The datatable \code{sysDt} is as above.
    The datatable \code{gpDt} must contain the columns \code{IDX, EXPID, GPTYPE, PARNAME, PARVAL}.
    The logical flag \code{ret.mat} is as above.
    The datatable \code{gpDt} is only needed if \code{sysDt} contains non-\code{NA} elements in \code{GPTYPE}.
  }
}
The function \code{map} is dependent on handlers that know how to map specific error types
given in the column \code{ERRTYPE} of datatable \code{sysDt}.
The following functions are available to manage handlers
\describe{
  \item{\code{addHandler(handler)}}{
    The list \code{handler} must contain the functions \code{getSignature, getErrTypes, map}.
  }
  \item{\code{getHandlerList()}}{
    Returns a list of the handlers registered by \code{addHandler}.
  }
  \item{\code{getHandlerNames()}}{
    Returns a character vector with the names of the handlers.
  }
}
The function \code{cov} by itself is able to provide the elements of the covariance matrix associated with rows in \code{sysDt} that
have a \code{NA} value in column \code{GPTYPE}.
For the blocks of the covariance matrix associated with rows with a non-\code{NA} as \code{GPTYPE}, appropriate subhandlers must be
registered that know how to calculate the covariance blocks for the specific Gaussian process types.
The following functions are available to manage GP handlers:
\describe{
  \item{\code{addGPHandler(handler)}}{
    The list \code{handler} must contain the functions \code{getSignature, getGPTypes, cov}.
  }
  \item{\code{getGPHandlerList()}}{
    Returns a list of the GP handlers registered by \code{addGPHandler}
  }
  \item{\code{getGPHandlerNames()}}{
    Returns a character vector with the names of the GP handlers.
  }
}
Maximum likelihood optimization for large scale problems requires some mathematical tricks to be feasible.
The following functions are helpful for the task:
\describe{
  \item{\code{grad_xtCovx_wrtUnc(x, sysDt, idx = NULL, ret.mat)}}{
    Evaluates the gradient of the expression \code{t(x) \%*\% K \%*\% x} with respect to partial derivatives of the
    uncertainties whose squares constitute the diagonal elements of the covariance matrix K.
    The matrix K in this expression is as returned by function \code{cov} explained above.
    The integer vector \code{idx} allows to calculate the gradient with respect to a subset of the uncertainties,
    other elements in the resulting gradient vector are set to zero.
    The meaning of \code{ret.mat} is as above.
  }
  \item{\code{grad_xtCovx_wrtHyp(x, sysDt, gpDt, idx = NULL, ret.mat)}}{
    Evaluates the gradient of the expression \code{t(x) \%*\% K \%*\% x} with respect to partial derivatives of the
    hyperparameters defined in \code{gpDt}.
    The integer vector \code{idx} allows to calculate the gradient with respect to a subset of the hyperparameters,
    other elements in the resulting gradient vector are set to zero.
    The meaning of \code{ret.mat} is as above.
  }
  \item{\code{tr_LtCovL_wrtUnc(L1, L2, sysDt, ret.mat)}}{
    Given matrices L1 and L2, evaluates the expression
    \eqn{\textrm{tr}(L_1^T \partial K/\partial{\delta_i} L_1) + L_2^T \partial K / \partial \delta_i L_2}
    where \eqn{\partial K / \partial \delta_i} is the derivative with respect to an uncertainty \eqn{\delta_i}.
    The function returns a vector where the \eqn{i^\textrm{th}} element corresponds to the derivative wrt \eqn{\delta_i}.
  }
}
}
